generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String   @id @default(cuid())
  email    String   @unique
  password String
  role     Role     @default(USER)
  Files    File[]
  Folders  Folder[]
  Token    Token?
}

model Token {
  id           String @id @default(cuid())
  refreshToken String @unique
  userId       String @unique
  User         User   @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Folder {
  id        String   @id @default(cuid())
  userId    String
  name      String   @default("Untitled")
  Files     File[]
  parentId  String?
  parent    Folder?  @relation("FolderToParent", fields: [parentId], references: [id])
  Folders   Folder[] @relation("FolderToParent")
  User      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now()) @db.Timestamptz(3)

  @@index([userId, name])
}

model File {
  id        String   @id @default(cuid())
  userId    String
  folderId  String
  exposure  Exposure @default(PRIVATE)
  name      String   @default("Untitled")
  expiresAt DateTime
  User      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  Folder    Folder   @relation(fields: [folderId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now()) @db.Timestamptz(3)

  @@index([userId, folderId, name])
}

enum Role {
  USER
  ADMIN
}

enum Exposure {
  PUBLIC
  PRIVATE
}
