version: '3.8'

services:
  db:
    image: postgres:alpine
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - '5432:5432'
    volumes:
      - postgres:/var/lib/postgresql/data
    networks:
      - backend-network
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${DB_USER}']
      interval: 30s
      timeout: 10s
      retries: 5

  redis:
    image: redis:alpine
    restart: always
    ports:
      - '6379:6379'
    volumes:
      - redis:/data
    networks:
      - backend-network
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 30s
      timeout: 10s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - '5050:80'
    depends_on:
      - db
    volumes:
      - pgadmin:/var/lib/pgadmin
    networks:
      - backend-network

  backend:
    build:
      context: ./backend
    depends_on:
      - redis
      - db
    environment:
      DATABASE_URL: postgres://${DB_USER}:${DB_PASSWORD}@db:5432/${DB_NAME}
      AWS_ACCESS_KEY: ${AWS_ACCESS_KEY}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_REGION: ${AWS_REGION}
      MAIN_BUCKET: ${MAIN_BUCKET}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      JWT_EXPIRATION_TIME: ${JWT_EXPIRATION_TIME}
      PORT: ${PORT}
      REFRESH_SECRET_KEY: ${REFRESH_SECRET_KEY}
      REFRESH_EXPIRATION_TIME: ${REFRESH_EXPIRATION_TIME}
      REDIS_HOST: redis
      REDIS_PORT: 6379
    ports:
      - '${PORT}:${PORT}'
    networks:
      - backend-network

volumes:
  postgres:
  redis:
  pgadmin:

networks:
  backend-network:
