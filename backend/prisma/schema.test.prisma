generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL_TEST")
}

model User {
  id String @id @default(uuid())

  email          String  @unique
  password       String
  role           Role    @default(USER)
  isActivated    Boolean @default(false)
  activationLink String

  Files   File[]
  Folders Folder[]
  Token   Token?
}

model Token {
  id           String @id @default(uuid())
  refreshToken String @unique
  userId       String @unique
  User         User   @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Folder {
  id     String @id @default(uuid())
  userId String

  name String

  Files File[]

  parentId String?
  parent   Folder?  @relation("FolderToParent", fields: [parentId], references: [id])
  children Folder[] @relation("FolderToParent")

  User      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
}

model File {
  id       String @id @default(uuid())
  userId   String
  folderId String

  name      String    @default("Untitled")
  expiresAt DateTime?
  exposure  Exposure  @default(PRIVATE)
  token     String

  User      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  Folder    Folder   @relation(fields: [folderId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
}

enum Role {
  USER
  ADMIN
}

enum Exposure {
  PUBLIC
  PRIVATE
}
